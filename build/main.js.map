{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["import * as utils from '@iobroker/adapter-core';\nimport axios from 'axios';\nimport bonjour, { BrowserConfig } from 'bonjour-service';\nimport * as dns from 'dns';\nimport { decrypt } from './decryptAES256';\n\nclass AirQ extends utils.Adapter {\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'air-q',\n\t\t});\n\t\tthis.on('ready', this.onReady.bind(this));\n\t\tthis.on('stateChange', this.onStateChange.bind(this));\n\t}\n\n\tprivate async onReady(): Promise<void> {\n\n\t\tif(!this.config.shortId){\n\t\t\tthis.log.error('ShortId is missing');\n\t\t}else if(!this.config.password){\n\t\t\tthis.log.error('Password is missing');\n\t\t}\n\n\t\tawait this.setObjectNotExistsAsync('Sensors', {\n\t\t\ttype: 'device',\n\t\t\tcommon: {\n\t\t\t\tname: this.config.shortId.concat('_air-Q'),\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t\tawait this.setObjectNotExistsAsync(`Sensors.health`, {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'health',\n\t\t\t\ttype: 'number',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n\t\t\t\twrite: true,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t\tawait this.setObjectNotExistsAsync(`Sensors.performance`, {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: 'performance',\n\t\t\t\ttype: 'number',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n\t\t\t\twrite: true,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n\t\tlet service: any;\n\t\tlet ip: string;\n\t\tlet sensorArray:string[];\n\n\t\ttry{\n\t\t\tservice = await this.findAirQInNetwork(this.config.shortId.concat('_air-q'));\n\t\t\tip = await this.getIp(service.name);\n\t\t\tsensorArray = await this.getSensorsInDevice(ip, this.config.password);\n\n\t\t\tfor (const element of sensorArray) {\n\t\t\t\tawait this.setObjectNotExistsAsync(`Sensors.${element}`, {\n\t\t\t\t\ttype: 'state',\n\t\t\t\t\tcommon: {\n\t\t\t\t\t\tname: element,\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\trole: 'value',\n\t\t\t\t\t\tread: true,\n\t\t\t\t\t\twrite: true,\n\t\t\t\t\t},\n\t\t\t\t\tnative: {},\n\t\t\t\t});\n\n\t\t\t\t this.subscribeStates(`Sensors.${element}`);\n\t\t\t}\n\n\t\t\tthis.setInterval(async () => {\n\t\t\t\tawait this.setStates(ip, sensorArray);\n\t\t\t}, this.config.retrievalRate * 1000);\n\t\t}catch(error){\n\t\t\tthis.log.error(error);\n\t\t\tthis.common!.enabled = false;\n\t\t}\n\t}\n\n\tprivate async findAirQInNetwork(airQName: string): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst instance = new bonjour();\n\t\t\tconst config: BrowserConfig = { type: 'http' };\n\n\t\t\tconst findAirQ = instance.find(config, (service) => {\n\t\t\t\tif (service.name === airQName) {\n\t\t\t\t\tfindAirQ.stop();\n\t\t\t\t\tresolve(service);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tfindAirQ.stop();\n\t\t\t\treject(new Error('AirQ not found in network'));\n\t\t\t\tthis.common!.enabled = false;\n\t\t\t}, 50000);\n\t\t});\n\t}\n\n\tprivate async getIp(service: any): Promise<string> {\n\t\treturn new Promise<string>((resolve, reject) => {\n\t\t\tdns.lookup(service, 4, (err, address) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(address);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async getDataFromAirQ(ip: string, password: string): Promise<any> {\n\t\ttry {\n\t\t\tconst response = await axios.get(`http://${ip}/data`, { responseType: 'json' });\n\t\t\tconst data = response.data.content;\n\t\t\tconst decryptedData = decrypt(data, password) as unknown;\n\t\t\tif (decryptedData && typeof decryptedData === 'object') {\n\t\t\t\tconst sensorsData = decryptedData as Sensors;\n\t\t\t\treturn sensorsData;\n\t\t\t} else {\n\t\t\t\tthrow new Error('DecryptedData is undefined or not an object');\n\t\t\t}\n\t\t} catch{\n\t\t\tthis.log.error('Error while getting data from AirQ');\n\t\t}\n\t}\n\n\tprivate async getAverageDataFromAirQ(ip: string, password: string): Promise<any> {\n\t\ttry {\n\t\t\tconst response = await axios.get(`http://${ip}/average`, { responseType: 'json' });\n\t\t\tconst data = response.data.content;\n\t\t\tconst decryptedData = decrypt(data, password) as unknown;\n\t\t\tif (decryptedData && typeof decryptedData === 'object') {\n\t\t\t\tconst sensorsData = decryptedData as Sensors;\n\t\t\t\treturn sensorsData;\n\t\t\t} else {\n\t\t\t\tthrow new Error('DecryptedData is undefined or not an object');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async getSensorsInDevice(ip: string, password: string): Promise<string[]> {\n\t\ttry {\n\t\t\tconst response = await axios.get(`http://${ip}/config`, { responseType: 'json' });\n\t\t\tconst data = response.data.content;\n\t\t\tconst decryptedData = decrypt(data, password) as unknown;\n\t\t\tif (decryptedData && typeof decryptedData === 'object') {\n\t\t\t\tconst sensorsData = decryptedData as DataConfig;\n\t\t\t\tconst sensors = this.checkParticulates(sensorsData.sensors);\n\t\t\t\treturn sensors;\n\t\t\t} else {\n\t\t\t\tthrow new Error('DecryptedData is undefined or not an object');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate checkParticulates(data:string[]): string[]{\n\t\tif (data.includes('particulates')){\n\t\t\tconst pm=['pm1','pm2_5','pm10'];\n\t\t\tconst index = data.indexOf('particulates');\n\t\t\tdata.splice(index, 1);\n\t\t\tdata.splice(index, 0, ...pm);\n\t\t\treturn data;\n\t\t}else{\n\t\t\treturn data;\n\t\t}\n\t}\n\n\tprivate getRetrievalType(): string {\n\t\treturn this.config.retrievalType;\n\t}\n\n\tprivate onStateChange(id: string, state: ioBroker.State | null | undefined): void {\n\t\tconst value = state?.val;\n\t\tif (state) {\n\t\t\tthis.getStateAsync(id, { val: value, ack: true });\n\t\t} else {\n\t\t\tthis.log.info(`State ${id} deleted`);\n\t\t}\n\t}\n\n\tprivate async setStates(ip: string, sensorArray: string[]): Promise<void> {\n\t\ttry{\n\t\t\tthis.getRetrievalType() === 'data'\n\t\t\t\t? this.setSensorData(ip, sensorArray)\n\t\t\t\t: this.setSensorAverageData(ip, sensorArray);\n\t\t\tthis.onStateChange('Sensors.health', await this.getStateAsync('Sensors.health'));\n\t\t\tthis.onStateChange('Sensors.performance', await this.getStateAsync('Sensors.performance'));\n\t\t\tfor (const element of sensorArray) {\n\t\t\t\tconst state = await this.getStateAsync(`Sensors.${element}`);\n\t\t\t\tthis.onStateChange(`Sensors.${element}`, state);\n\t\t\t}\n\t\t}catch{\n\t\t\tthis.log.error('Error while setting states');\n\t\t}\n\t}\n\n\tprivate async setSensorData(ip: string, sensorArray: string[]): Promise<void> {\n\t\ttry{\n\t\t\tconst data = await this.getDataFromAirQ(ip, this.config.password);\n\t\t\tfor (const element of sensorArray) {\n\t\t\t\tthis.setStateAsync(`Sensors.${element}`, { val: data[element][0], ack: true });\n\t\t\t}\n\t\t\tthis.setStateAsync('Sensors.health', { val: data.health / 10, ack: true });\n\t\t\tthis.setStateAsync('Sensors.performance', { val: data.performance / 10, ack: true });\n\t\t}catch{\n\t\t\tthis.log.error('Error while setting data from AirQ');\n\t\t}\n\t}\n\n\tprivate async setSensorAverageData(ip: string, sensorArray: string[]): Promise<void> {\n\t\ttry{\n\t\t\tconst data = await this.getAverageDataFromAirQ(ip, this.config.password);\n\t\t\tfor (const element of sensorArray) {\n\t\t\t\tthis.setStateAsync(`Sensors.${element}`, { val: data[element][0], ack: true });\n\t\t\t}\n\t\t\tthis.setStateAsync('Sensors.health', { val: data.health / 10, ack: true });\n\t\t\tthis.setStateAsync('Sensors.performance', { val: data.performance / 10, ack: true });\n\t\t}catch{\n\t\t\tthis.log.error('Error while setting average data from AirQ');\n\t\t}\n\t}\n}\n\nif (require.main !== module) {\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new AirQ(options);\n} else {\n\t(() => new AirQ())();\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA,YAAuB;AACvB,mBAAkB;AAClB,6BAAuC;AACvC,UAAqB;AACrB,2BAAwB;AAExB,MAAM,aAAa,MAAM,QAAQ;AAAA,EACzB,YAAY,UAAyC,CAAC,GAAG;AAC/D,UAAM;AAAA,MACL,GAAG;AAAA,MACH,MAAM;AAAA,IACP,CAAC;AACD,SAAK,GAAG,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC;AACxC,SAAK,GAAG,eAAe,KAAK,cAAc,KAAK,IAAI,CAAC;AAAA,EACrD;AAAA,EAEA,MAAc,UAAyB;AAEtC,QAAG,CAAC,KAAK,OAAO,SAAQ;AACvB,WAAK,IAAI,MAAM,oBAAoB;AAAA,IACpC,WAAS,CAAC,KAAK,OAAO,UAAS;AAC9B,WAAK,IAAI,MAAM,qBAAqB;AAAA,IACrC;AAEA,UAAM,KAAK,wBAAwB,WAAW;AAAA,MAC7C,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM,KAAK,OAAO,QAAQ,OAAO,QAAQ;AAAA,MAC1C;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AACD,UAAM,KAAK,wBAAwB,kBAAkB;AAAA,MACpD,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AACD,UAAM,KAAK,wBAAwB,uBAAuB;AAAA,MACzD,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,OAAO;AAAA,MACR;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAED,QAAI;AACJ,QAAI;AACJ,QAAI;AAEJ,QAAG;AACF,gBAAU,MAAM,KAAK,kBAAkB,KAAK,OAAO,QAAQ,OAAO,QAAQ,CAAC;AAC3E,WAAK,MAAM,KAAK,MAAM,QAAQ,IAAI;AAClC,oBAAc,MAAM,KAAK,mBAAmB,IAAI,KAAK,OAAO,QAAQ;AAEpE,iBAAW,WAAW,aAAa;AAClC,cAAM,KAAK,wBAAwB,WAAW,WAAW;AAAA,UACxD,MAAM;AAAA,UACN,QAAQ;AAAA,YACP,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,OAAO;AAAA,UACR;AAAA,UACA,QAAQ,CAAC;AAAA,QACV,CAAC;AAEA,aAAK,gBAAgB,WAAW,SAAS;AAAA,MAC3C;AAEA,WAAK,YAAY,YAAY;AAC5B,cAAM,KAAK,UAAU,IAAI,WAAW;AAAA,MACrC,GAAG,KAAK,OAAO,gBAAgB,GAAI;AAAA,IACpC,SAAO,OAAN;AACA,WAAK,IAAI,MAAM,KAAK;AACpB,WAAK,OAAQ,UAAU;AAAA,IACxB;AAAA,EACD;AAAA,EAEA,MAAc,kBAAkB,UAAgC;AAC/D,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACvC,YAAM,WAAW,IAAI,uBAAAA,QAAQ;AAC7B,YAAM,SAAwB,EAAE,MAAM,OAAO;AAE7C,YAAM,WAAW,SAAS,KAAK,QAAQ,CAAC,YAAY;AACnD,YAAI,QAAQ,SAAS,UAAU;AAC9B,mBAAS,KAAK;AACd,kBAAQ,OAAO;AAAA,QAChB;AAAA,MACD,CAAC;AAED,iBAAW,MAAM;AAChB,iBAAS,KAAK;AACd,eAAO,IAAI,MAAM,2BAA2B,CAAC;AAC7C,aAAK,OAAQ,UAAU;AAAA,MACxB,GAAG,GAAK;AAAA,IACT,CAAC;AAAA,EACF;AAAA,EAEA,MAAc,MAAM,SAA+B;AAClD,WAAO,IAAI,QAAgB,CAAC,SAAS,WAAW;AAC/C,UAAI,OAAO,SAAS,GAAG,CAAC,KAAK,YAAY;AACxC,YAAI,KAAK;AACR,iBAAO,GAAG;AAAA,QACX,OAAO;AACN,kBAAQ,OAAO;AAAA,QAChB;AAAA,MACD,CAAC;AAAA,IACF,CAAC;AAAA,EACF;AAAA,EAEA,MAAc,gBAAgB,IAAY,UAAgC;AACzE,QAAI;AACH,YAAM,WAAW,MAAM,aAAAC,QAAM,IAAI,UAAU,WAAW,EAAE,cAAc,OAAO,CAAC;AAC9E,YAAM,OAAO,SAAS,KAAK;AAC3B,YAAM,oBAAgB,8BAAQ,MAAM,QAAQ;AAC5C,UAAI,iBAAiB,OAAO,kBAAkB,UAAU;AACvD,cAAM,cAAc;AACpB,eAAO;AAAA,MACR,OAAO;AACN,cAAM,IAAI,MAAM,6CAA6C;AAAA,MAC9D;AAAA,IACD,QAAE;AACD,WAAK,IAAI,MAAM,oCAAoC;AAAA,IACpD;AAAA,EACD;AAAA,EAEA,MAAc,uBAAuB,IAAY,UAAgC;AAChF,QAAI;AACH,YAAM,WAAW,MAAM,aAAAA,QAAM,IAAI,UAAU,cAAc,EAAE,cAAc,OAAO,CAAC;AACjF,YAAM,OAAO,SAAS,KAAK;AAC3B,YAAM,oBAAgB,8BAAQ,MAAM,QAAQ;AAC5C,UAAI,iBAAiB,OAAO,kBAAkB,UAAU;AACvD,cAAM,cAAc;AACpB,eAAO;AAAA,MACR,OAAO;AACN,cAAM,IAAI,MAAM,6CAA6C;AAAA,MAC9D;AAAA,IACD,SAAS,OAAP;AACD,YAAM;AAAA,IACP;AAAA,EACD;AAAA,EAEA,MAAc,mBAAmB,IAAY,UAAqC;AACjF,QAAI;AACH,YAAM,WAAW,MAAM,aAAAA,QAAM,IAAI,UAAU,aAAa,EAAE,cAAc,OAAO,CAAC;AAChF,YAAM,OAAO,SAAS,KAAK;AAC3B,YAAM,oBAAgB,8BAAQ,MAAM,QAAQ;AAC5C,UAAI,iBAAiB,OAAO,kBAAkB,UAAU;AACvD,cAAM,cAAc;AACpB,cAAM,UAAU,KAAK,kBAAkB,YAAY,OAAO;AAC1D,eAAO;AAAA,MACR,OAAO;AACN,cAAM,IAAI,MAAM,6CAA6C;AAAA,MAC9D;AAAA,IACD,SAAS,OAAP;AACD,YAAM;AAAA,IACP;AAAA,EACD;AAAA,EAEQ,kBAAkB,MAAwB;AACjD,QAAI,KAAK,SAAS,cAAc,GAAE;AACjC,YAAM,KAAG,CAAC,OAAM,SAAQ,MAAM;AAC9B,YAAM,QAAQ,KAAK,QAAQ,cAAc;AACzC,WAAK,OAAO,OAAO,CAAC;AACpB,WAAK,OAAO,OAAO,GAAG,GAAG,EAAE;AAC3B,aAAO;AAAA,IACR,OAAK;AACJ,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EAEQ,mBAA2B;AAClC,WAAO,KAAK,OAAO;AAAA,EACpB;AAAA,EAEQ,cAAc,IAAY,OAAgD;AACjF,UAAM,QAAQ,+BAAO;AACrB,QAAI,OAAO;AACV,WAAK,cAAc,IAAI,EAAE,KAAK,OAAO,KAAK,KAAK,CAAC;AAAA,IACjD,OAAO;AACN,WAAK,IAAI,KAAK,SAAS,YAAY;AAAA,IACpC;AAAA,EACD;AAAA,EAEA,MAAc,UAAU,IAAY,aAAsC;AACzE,QAAG;AACF,WAAK,iBAAiB,MAAM,SACzB,KAAK,cAAc,IAAI,WAAW,IAClC,KAAK,qBAAqB,IAAI,WAAW;AAC5C,WAAK,cAAc,kBAAkB,MAAM,KAAK,cAAc,gBAAgB,CAAC;AAC/E,WAAK,cAAc,uBAAuB,MAAM,KAAK,cAAc,qBAAqB,CAAC;AACzF,iBAAW,WAAW,aAAa;AAClC,cAAM,QAAQ,MAAM,KAAK,cAAc,WAAW,SAAS;AAC3D,aAAK,cAAc,WAAW,WAAW,KAAK;AAAA,MAC/C;AAAA,IACD,QAAC;AACA,WAAK,IAAI,MAAM,4BAA4B;AAAA,IAC5C;AAAA,EACD;AAAA,EAEA,MAAc,cAAc,IAAY,aAAsC;AAC7E,QAAG;AACF,YAAM,OAAO,MAAM,KAAK,gBAAgB,IAAI,KAAK,OAAO,QAAQ;AAChE,iBAAW,WAAW,aAAa;AAClC,aAAK,cAAc,WAAW,WAAW,EAAE,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,CAAC;AAAA,MAC9E;AACA,WAAK,cAAc,kBAAkB,EAAE,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,CAAC;AACzE,WAAK,cAAc,uBAAuB,EAAE,KAAK,KAAK,cAAc,IAAI,KAAK,KAAK,CAAC;AAAA,IACpF,QAAC;AACA,WAAK,IAAI,MAAM,oCAAoC;AAAA,IACpD;AAAA,EACD;AAAA,EAEA,MAAc,qBAAqB,IAAY,aAAsC;AACpF,QAAG;AACF,YAAM,OAAO,MAAM,KAAK,uBAAuB,IAAI,KAAK,OAAO,QAAQ;AACvE,iBAAW,WAAW,aAAa;AAClC,aAAK,cAAc,WAAW,WAAW,EAAE,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,CAAC;AAAA,MAC9E;AACA,WAAK,cAAc,kBAAkB,EAAE,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,CAAC;AACzE,WAAK,cAAc,uBAAuB,EAAE,KAAK,KAAK,cAAc,IAAI,KAAK,KAAK,CAAC;AAAA,IACpF,QAAC;AACA,WAAK,IAAI,MAAM,4CAA4C;AAAA,IAC5D;AAAA,EACD;AACD;AAEA,IAAI,QAAQ,SAAS,QAAQ;AAC5B,SAAO,UAAU,CAAC,YAAuD,IAAI,KAAK,OAAO;AAC1F,OAAO;AACN,GAAC,MAAM,IAAI,KAAK,GAAG;AACpB;",
  "names": ["bonjour", "axios"]
}
