{
  "version": 3,
  "sources": ["../src/decryptAES256.ts"],
  "sourcesContent": ["import CryptoJS from 'crypto-js';\n\nexport function decrypt(msgb64: string, airqpass: string): JSON | undefined {\n\tif (airqpass.length < 32) {\n\t\tfor (let i = airqpass.length; i < 32; i++) {\n\t\t\tairqpass += '0';\n\t\t}\n\t} else if (airqpass.length > 32) {\n\t\tairqpass = airqpass.substring(0, 32);\n\t}\n\tconst key = CryptoJS.enc.Utf8.parse(airqpass);\n\tconst ciphertext = CryptoJS.enc.Base64.parse(msgb64);\n\tconst iv = ciphertext.clone();\n\tiv.sigBytes = 16;\n\tiv.clamp();\n\tciphertext.words.splice(0, 4); // delete 4 words = 16 bytes\n\tciphertext.sigBytes -= 16;\n\tconst decrypted = CryptoJS.AES.decrypt(CryptoJS.enc.Base64.stringify(ciphertext), key, {\n\t\tiv: iv,\n\t});\n\ttry {\n\t\treturn JSON.parse(decrypted.toString(CryptoJS.enc.Utf8));\n\t} catch {\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqB;AAEd,SAAS,QAAQ,QAAgB,UAAoC;AAC3E,MAAI,SAAS,SAAS,IAAI;AACzB,aAAS,IAAI,SAAS,QAAQ,IAAI,IAAI,KAAK;AAC1C,kBAAY;AAAA,IACb;AAAA,EACD,WAAW,SAAS,SAAS,IAAI;AAChC,eAAW,SAAS,UAAU,GAAG,EAAE;AAAA,EACpC;AACA,QAAM,MAAM,iBAAAA,QAAS,IAAI,KAAK,MAAM,QAAQ;AAC5C,QAAM,aAAa,iBAAAA,QAAS,IAAI,OAAO,MAAM,MAAM;AACnD,QAAM,KAAK,WAAW,MAAM;AAC5B,KAAG,WAAW;AACd,KAAG,MAAM;AACT,aAAW,MAAM,OAAO,GAAG,CAAC;AAC5B,aAAW,YAAY;AACvB,QAAM,YAAY,iBAAAA,QAAS,IAAI,QAAQ,iBAAAA,QAAS,IAAI,OAAO,UAAU,UAAU,GAAG,KAAK;AAAA,IACtF;AAAA,EACD,CAAC;AACD,MAAI;AACH,WAAO,KAAK,MAAM,UAAU,SAAS,iBAAAA,QAAS,IAAI,IAAI,CAAC;AAAA,EACxD,QAAQ;AACP,WAAO;AAAA,EACR;AACD;",
  "names": ["CryptoJS"]
}
